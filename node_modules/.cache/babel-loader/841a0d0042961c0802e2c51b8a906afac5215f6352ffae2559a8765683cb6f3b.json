{"ast":null,"code":"const childProcess = require('child_process');\nconst once = require('one-time');\nclass SayPlatformBase {\n  constructor() {\n    this.child = null;\n    this.baseSpeed = 0;\n  }\n\n  /**\n   * Uses system libraries to speak text via the speakers.\n   *\n   * @param {string} text Text to be spoken\n   * @param {string|null} voice Name of voice to be spoken with\n   * @param {number|null} speed Speed of text (e.g. 1.0 for normal, 0.5 half, 2.0 double)\n   * @param {Function|null} callback A callback of type function(err) to return.\n   */\n  speak(text, voice, speed, callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {};\n    }\n    callback = once(callback);\n    if (!text) {\n      return setImmediate(() => {\n        callback(new TypeError('say.speak(): must provide text parameter'));\n      });\n    }\n    let {\n      command,\n      args,\n      pipedData,\n      options\n    } = this.buildSpeakCommand({\n      text,\n      voice,\n      speed\n    });\n    this.child = childProcess.spawn(command, args, options);\n    this.child.stdin.setEncoding('ascii');\n    this.child.stderr.setEncoding('ascii');\n    if (pipedData) {\n      this.child.stdin.end(pipedData);\n    }\n    this.child.stderr.once('data', data => {\n      // we can't stop execution from this function\n      callback(new Error(data));\n    });\n    this.child.addListener('exit', (code, signal) => {\n      if (code === null || signal !== null) {\n        return callback(new Error(`say.speak(): could not talk, had an error [code: ${code}] [signal: ${signal}]`));\n      }\n      this.child = null;\n      callback(null);\n    });\n  }\n\n  /**\n   * Uses system libraries to speak text via the speakers.\n   *\n   * @param {string} text Text to be spoken\n   * @param {string|null} voice Name of voice to be spoken with\n   * @param {number|null} speed Speed of text (e.g. 1.0 for normal, 0.5 half, 2.0 double)\n   * @param {string} filename Path to file to write audio to, e.g. \"greeting.wav\"\n   * @param {Function|null} callback A callback of type function(err) to return.\n   */\n  export(text, voice, speed, filename, callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {};\n    }\n    callback = once(callback);\n    if (!text) {\n      return setImmediate(() => {\n        callback(new TypeError('say.export(): must provide text parameter'));\n      });\n    }\n    if (!filename) {\n      return setImmediate(() => {\n        callback(new TypeError('say.export(): must provide filename parameter'));\n      });\n    }\n    try {\n      var {\n        command,\n        args,\n        pipedData,\n        options\n      } = this.buildExportCommand({\n        text,\n        voice,\n        speed,\n        filename\n      });\n    } catch (error) {\n      return setImmediate(() => {\n        callback(error);\n      });\n    }\n    this.child = childProcess.spawn(command, args, options);\n    this.child.stdin.setEncoding('ascii');\n    this.child.stderr.setEncoding('ascii');\n    if (pipedData) {\n      this.child.stdin.end(pipedData);\n    }\n    this.child.stderr.once('data', data => {\n      // we can't stop execution from this function\n      callback(new Error(data));\n    });\n    this.child.addListener('exit', (code, signal) => {\n      if (code === null || signal !== null) {\n        return callback(new Error(`say.export(): could not talk, had an error [code: ${code}] [signal: ${signal}]`));\n      }\n      this.child = null;\n      callback(null);\n    });\n  }\n\n  /**\n   * Stops currently playing audio. There will be unexpected results if multiple audios are being played at once\n   *\n   * TODO: If two messages are being spoken simultaneously, childD points to new instance, no way to kill previous\n   *\n   * @param {Function|null} callback A callback of type function(err) to return.\n   */\n  stop(callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {};\n    }\n    callback = once(callback);\n    if (!this.child) {\n      return setImmediate(() => {\n        callback(new Error('say.stop(): no speech to kill'));\n      });\n    }\n    this.runStopCommand();\n    this.child = null;\n    callback(null);\n  }\n  convertSpeed(speed) {\n    return Math.ceil(this.baseSpeed * speed);\n  }\n\n  /**\n   * Get Installed voices on system\n   * @param {Function} callback A callback of type function(err,voices) to return.\n   */\n  getInstalledVoices(callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {};\n    }\n    callback = once(callback);\n    let {\n      command,\n      args\n    } = this.getVoices();\n    var voices = [];\n    this.child = childProcess.spawn(command, args);\n    this.child.stdin.setEncoding('ascii');\n    this.child.stderr.setEncoding('ascii');\n    this.child.stderr.once('data', data => {\n      // we can't stop execution from this function\n      callback(new Error(data));\n    });\n    this.child.stdout.on('data', function (data) {\n      voices += data;\n    });\n    this.child.addListener('exit', (code, signal) => {\n      if (code === null || signal !== null) {\n        return callback(new Error(`say.getInstalledVoices(): could not get installed voices, had an error [code: ${code}] [signal: ${signal}]`));\n      }\n      if (voices.length > 0) {\n        voices = voices.split('\\r\\n');\n        voices = voices[voices.length - 1] === '' ? voices.slice(0, voices.length - 1) : voices;\n      }\n      this.child = null;\n      callback(null, voices);\n    });\n    this.child.stdin.end();\n  }\n}\nmodule.exports = SayPlatformBase;","map":{"version":3,"names":["childProcess","require","once","SayPlatformBase","constructor","child","baseSpeed","speak","text","voice","speed","callback","setImmediate","TypeError","command","args","pipedData","options","buildSpeakCommand","spawn","stdin","setEncoding","stderr","end","data","Error","addListener","code","signal","export","filename","buildExportCommand","error","stop","runStopCommand","convertSpeed","Math","ceil","getInstalledVoices","getVoices","voices","stdout","on","length","split","slice","module","exports"],"sources":["C:/Users/SAKSHI SINGH/OneDrive/Desktop/test-master/node_modules/say/platform/base.js"],"sourcesContent":["const childProcess = require('child_process')\nconst once = require('one-time')\n\nclass SayPlatformBase {\n  constructor () {\n    this.child = null\n    this.baseSpeed = 0\n  }\n\n  /**\n   * Uses system libraries to speak text via the speakers.\n   *\n   * @param {string} text Text to be spoken\n   * @param {string|null} voice Name of voice to be spoken with\n   * @param {number|null} speed Speed of text (e.g. 1.0 for normal, 0.5 half, 2.0 double)\n   * @param {Function|null} callback A callback of type function(err) to return.\n   */\n  speak (text, voice, speed, callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {}\n    }\n\n    callback = once(callback)\n\n    if (!text) {\n      return setImmediate(() => {\n        callback(new TypeError('say.speak(): must provide text parameter'))\n      })\n    }\n\n    let { command, args, pipedData, options } = this.buildSpeakCommand({ text, voice, speed })\n\n    this.child = childProcess.spawn(command, args, options)\n\n    this.child.stdin.setEncoding('ascii')\n    this.child.stderr.setEncoding('ascii')\n\n    if (pipedData) {\n      this.child.stdin.end(pipedData)\n    }\n\n    this.child.stderr.once('data', (data) => {\n      // we can't stop execution from this function\n      callback(new Error(data))\n    })\n\n    this.child.addListener('exit', (code, signal) => {\n      if (code === null || signal !== null) {\n        return callback(new Error(`say.speak(): could not talk, had an error [code: ${code}] [signal: ${signal}]`))\n      }\n\n      this.child = null\n\n      callback(null)\n    })\n  }\n\n  /**\n   * Uses system libraries to speak text via the speakers.\n   *\n   * @param {string} text Text to be spoken\n   * @param {string|null} voice Name of voice to be spoken with\n   * @param {number|null} speed Speed of text (e.g. 1.0 for normal, 0.5 half, 2.0 double)\n   * @param {string} filename Path to file to write audio to, e.g. \"greeting.wav\"\n   * @param {Function|null} callback A callback of type function(err) to return.\n   */\n  export (text, voice, speed, filename, callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {}\n    }\n\n    callback = once(callback)\n\n    if (!text) {\n      return setImmediate(() => {\n        callback(new TypeError('say.export(): must provide text parameter'))\n      })\n    }\n\n    if (!filename) {\n      return setImmediate(() => {\n        callback(new TypeError('say.export(): must provide filename parameter'))\n      })\n    }\n\n    try {\n      var { command, args, pipedData, options } = this.buildExportCommand({ text, voice, speed, filename })\n    } catch (error) {\n      return setImmediate(() => {\n        callback(error)\n      })\n    }\n\n    this.child = childProcess.spawn(command, args, options)\n\n    this.child.stdin.setEncoding('ascii')\n    this.child.stderr.setEncoding('ascii')\n\n    if (pipedData) {\n      this.child.stdin.end(pipedData)\n    }\n\n    this.child.stderr.once('data', (data) => {\n      // we can't stop execution from this function\n      callback(new Error(data))\n    })\n\n    this.child.addListener('exit', (code, signal) => {\n      if (code === null || signal !== null) {\n        return callback(new Error(`say.export(): could not talk, had an error [code: ${code}] [signal: ${signal}]`))\n      }\n\n      this.child = null\n\n      callback(null)\n    })\n  }\n\n  /**\n   * Stops currently playing audio. There will be unexpected results if multiple audios are being played at once\n   *\n   * TODO: If two messages are being spoken simultaneously, childD points to new instance, no way to kill previous\n   *\n   * @param {Function|null} callback A callback of type function(err) to return.\n   */\n  stop (callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {}\n    }\n\n    callback = once(callback)\n\n    if (!this.child) {\n      return setImmediate(() => {\n        callback(new Error('say.stop(): no speech to kill'))\n      })\n    }\n\n    this.runStopCommand()\n\n    this.child = null\n\n    callback(null)\n  }\n\n  convertSpeed (speed) {\n    return Math.ceil(this.baseSpeed * speed)\n  }\n\n  /**\n   * Get Installed voices on system\n   * @param {Function} callback A callback of type function(err,voices) to return.\n   */\n  getInstalledVoices (callback) {\n    if (typeof callback !== 'function') {\n      callback = () => {}\n    }\n    callback = once(callback)\n\n    let { command, args } = this.getVoices()\n    var voices = []\n    this.child = childProcess.spawn(command, args)\n\n    this.child.stdin.setEncoding('ascii')\n    this.child.stderr.setEncoding('ascii')\n\n    this.child.stderr.once('data', (data) => {\n      // we can't stop execution from this function\n      callback(new Error(data))\n    })\n    this.child.stdout.on('data', function (data) {\n      voices += data\n    })\n\n    this.child.addListener('exit', (code, signal) => {\n      if (code === null || signal !== null) {\n        return callback(new Error(`say.getInstalledVoices(): could not get installed voices, had an error [code: ${code}] [signal: ${signal}]`))\n      }\n      if (voices.length > 0) {\n        voices = voices.split('\\r\\n')\n        voices = (voices[voices.length - 1] === '') ? voices.slice(0, voices.length - 1) : voices\n      }\n      this.child = null\n\n      callback(null, voices)\n    })\n\n    this.child.stdin.end()\n  }\n}\n\nmodule.exports = SayPlatformBase\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}