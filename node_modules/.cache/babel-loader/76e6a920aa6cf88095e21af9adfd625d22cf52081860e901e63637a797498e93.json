{"ast":null,"code":"//import 'Action Type 'from @muibase ;\nconst initializer = {\n  algorithm: 'bubble',\n  color: '#35c6ff',\n  speed: 100,\n  range: '30',\n  play: false,\n  values: [],\n  timeouts: []\n};\nconst updateProps = (state = initializer, action) => {\n  switch (action.type) {\n    case 'UPDATE_RANGE':\n      {\n        let arr = [36, 24, 50, 30, 69];\n        for (let i = 0; i < action.range; i++) arr.push([Math.floor(Math.random() * 100) + 1, i]);\n        return {\n          ...state,\n          range: action.range,\n          values: arr\n        };\n      }\n    case 'UPDATE_VALUES':\n      {\n        return {\n          ...state,\n          values: action._values\n        };\n      }\n    case 'UPDATE_SPEED':\n      {\n        return {\n          ...state,\n          speed: action.speed\n        };\n      }\n    case 'UPDATE_COLOR':\n      {\n        return {\n          ...state,\n          color: action.color\n        };\n      }\n    case 'UPDATE_ALGORITHM':\n      {\n        return {\n          ...state,\n          algorithm: action.algorithm\n        };\n      }\n    case 'UPDATE_TIEMOUTS':\n      {\n        return {\n          ...state,\n          timeouts: action._timeouts\n        };\n      }\n    case 'CHANGE_VALUES':\n      {\n        let arr = [],\n          range = state.range;\n        for (let i = 0; i < range; i++) arr.push([Math.floor(Math.random() * 100) + 1, i]);\n        return {\n          ...state,\n          values: arr\n        };\n      }\n    case 'PLAY_PAUSE':\n      {\n        return {\n          ...state,\n          play: action._play\n        };\n      }\n    case 'STOP':\n      {\n        // Clear all timeouts\n        state.timeouts.forEach(timeout => clearTimeout(timeout));\n        // Reset the timeouts array\n        return {\n          ...state,\n          timeouts: []\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default updateProps;","map":{"version":3,"names":["initializer","algorithm","color","speed","range","play","values","timeouts","updateProps","state","action","type","arr","i","push","Math","floor","random","_values","_timeouts","_play","forEach","timeout","clearTimeout"],"sources":["C:/Users/SAKSHI SINGH/OneDrive/Desktop/test-master/src/reducer/updateProps.js"],"sourcesContent":["//import 'Action Type 'from @muibase ;\nconst initializer = {\n   algorithm: 'bubble',\n   color: '#35c6ff',\n   speed: 100,\n   range: '30',\n   play: false,\n   values: [],\n   timeouts: []\n};\n\nconst updateProps = (state = initializer, action) => {\n   switch (action.type) {\n      case 'UPDATE_RANGE': {\n         let arr = [36, 24, 50, 30, 69];\n         for (let i = 0; i < action.range; i++)\n            arr.push([Math.floor(Math.random() * 100) + 1, i]);\n\n         return { ...state, range: action.range, values: arr };\n      }\n\n      case 'UPDATE_VALUES': {\n         return { ...state, values: action._values };\n      }\n\n      case 'UPDATE_SPEED': {\n         return { ...state, speed: action.speed };\n      }\n\n      case 'UPDATE_COLOR': {\n         return { ...state, color: action.color };\n      }\n\n      case 'UPDATE_ALGORITHM': {\n         return { ...state, algorithm: action.algorithm };\n      }\n\n      case 'UPDATE_TIEMOUTS': {\n         return { ...state, timeouts: action._timeouts };\n      }\n\n      case 'CHANGE_VALUES': {\n         let arr = [], range = state.range;\n         for (let i = 0; i < range; i++)\n            arr.push([Math.floor(Math.random() * 100) + 1, i]);\n         return { ...state, values: arr };\n      }\n\n      case 'PLAY_PAUSE': {\n         return { ...state, play: action._play };\n      }\n\n      case 'STOP': {\n         // Clear all timeouts\n         state.timeouts.forEach(timeout => clearTimeout(timeout));\n         // Reset the timeouts array\n         return { ...state, timeouts: [] };\n      }\n\n      default:\n         return state;\n   }\n}\n\nexport default updateProps;\n\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG;EACjBC,SAAS,EAAE,QAAQ;EACnBC,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,GAAG;EACVC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGT,WAAW,EAAEU,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IAChB,KAAK,cAAc;MAAE;QAClB,IAAIC,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACN,KAAK,EAAES,CAAC,EAAE,EAClCD,GAAG,CAACE,IAAI,CAAC,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAEJ,CAAC,CAAC,CAAC;QAErD,OAAO;UAAE,GAAGJ,KAAK;UAAEL,KAAK,EAAEM,MAAM,CAACN,KAAK;UAAEE,MAAM,EAAEM;QAAI,CAAC;MACxD;IAEA,KAAK,eAAe;MAAE;QACnB,OAAO;UAAE,GAAGH,KAAK;UAAEH,MAAM,EAAEI,MAAM,CAACQ;QAAQ,CAAC;MAC9C;IAEA,KAAK,cAAc;MAAE;QAClB,OAAO;UAAE,GAAGT,KAAK;UAAEN,KAAK,EAAEO,MAAM,CAACP;QAAM,CAAC;MAC3C;IAEA,KAAK,cAAc;MAAE;QAClB,OAAO;UAAE,GAAGM,KAAK;UAAEP,KAAK,EAAEQ,MAAM,CAACR;QAAM,CAAC;MAC3C;IAEA,KAAK,kBAAkB;MAAE;QACtB,OAAO;UAAE,GAAGO,KAAK;UAAER,SAAS,EAAES,MAAM,CAACT;QAAU,CAAC;MACnD;IAEA,KAAK,iBAAiB;MAAE;QACrB,OAAO;UAAE,GAAGQ,KAAK;UAAEF,QAAQ,EAAEG,MAAM,CAACS;QAAU,CAAC;MAClD;IAEA,KAAK,eAAe;MAAE;QACnB,IAAIP,GAAG,GAAG,EAAE;UAAER,KAAK,GAAGK,KAAK,CAACL,KAAK;QACjC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAC3BD,GAAG,CAACE,IAAI,CAAC,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAEJ,CAAC,CAAC,CAAC;QACrD,OAAO;UAAE,GAAGJ,KAAK;UAAEH,MAAM,EAAEM;QAAI,CAAC;MACnC;IAEA,KAAK,YAAY;MAAE;QAChB,OAAO;UAAE,GAAGH,KAAK;UAAEJ,IAAI,EAAEK,MAAM,CAACU;QAAM,CAAC;MAC1C;IAEA,KAAK,MAAM;MAAE;QACV;QACAX,KAAK,CAACF,QAAQ,CAACc,OAAO,CAACC,OAAO,IAAIC,YAAY,CAACD,OAAO,CAAC,CAAC;QACxD;QACA,OAAO;UAAE,GAAGb,KAAK;UAAEF,QAAQ,EAAE;QAAG,CAAC;MACpC;IAEA;MACG,OAAOE,KAAK;EAClB;AACH,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}